"use strict";(self.webpackChunkbuchla=self.webpackChunkbuchla||[]).push([[721],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var r=o.createContext({}),h=function(e){var t=o.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=h(e.components);return o.createElement(r.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=h(n),d=a,g=u["".concat(r,".").concat(d)]||u[d]||p[d]||s;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var h=2;h<s;h++)i[h]=n[h];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1536:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>h});var o=n(7462),a=(n(7294),n(3905));const s={},i=void 0,l={unversionedId:"200e/251e-md",id:"200e/251e-md",title:"251e-md",description:"Buchla 251e",source:"@site/docs/200e/251e-md.md",sourceDirName:"200e",slug:"/200e/251e-md",permalink:"/buchla_doc/docs/200e/251e-md",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"**250e Arbitrary Function Generator**",permalink:"/buchla_doc/docs/200e/250e"},next:{title:"251e Quad Sequential Voltage Source",permalink:"/buchla_doc/docs/200e/251e"}},r={},h=[{value:"Sections A-D",id:"sections-a-d",level:2},{value:"Starting and Stopping a Sequence",id:"starting-and-stopping-a-sequence",level:3},{value:"Selecting a Sequence for Editing",id:"selecting-a-sequence-for-editing",level:3},{value:"Stage Number Screen",id:"stage-number-screen",level:3},{value:"Pulse and CV Out Banana Jacks",id:"pulse-and-cv-out-banana-jacks",level:3},{value:"SEQ. EDIT",id:"seq-edit",level:2},{value:"&quot;sync next&quot;",id:"sync-next",level:3},{value:"&quot;reverse&quot;",id:"reverse",level:3},{value:"copy",id:"copy",level:3},{value:"clear",id:"clear",level:3},{value:"tempo",id:"tempo",level:3},{value:"&quot;init delay&quot;",id:"init-delay",level:3},{value:"end/cycle",id:"endcycle",level:3},{value:"STAGE EDIT",id:"stage-edit",level:2},{value:"stage",id:"stage",level:3},{value:"interval",id:"interval",level:3},{value:"x1.5 / triplt",id:"x15--triplt",level:3},{value:"dur.",id:"dur",level:3},{value:"c.v. out",id:"cv-out",level:3},{value:"Looping on the 251e",id:"looping-on-the-251e",level:2},{value:"Master Clock",id:"master-clock",level:2},{value:"c.v. in",id:"cv-in",level:3},{value:"Knob with LED",id:"knob-with-led",level:3},{value:"REMOTE ENABLE",id:"remote-enable",level:2}],c={toc:h};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchla_doc/static/img/200e/251.jpg",alt:"Buchla 251e",title:"Buchla 250e"})),(0,a.kt)("h1",{id:"the-buchla-251e"},"The Buchla 251e"),(0,a.kt)("p",null," The Buchla 251e is a module that contains four different 50-stage looping sequencers that share a programming interface for individual parametric settings that can be changed or viewed while sequences are playing."),(0,a.kt)("h2",{id:"sections-a-d"},"Sections A-D"),(0,a.kt)("p",null," At the top of the module, there are four identical sections labeled A-D that represent the four sequencers present in the Buchla 251e."),(0,a.kt)("h3",{id:"starting-and-stopping-a-sequence"},"Starting and Stopping a Sequence"),(0,a.kt)("p",null,' The sections begin with pulse inputs that are designed to allow the user to stop or start sequences intentionally with pulses. Next to these orange banana jacks, there is a button that allows a user to physically start or stop the sequence, with LEDs that indicate the status of play\u2026 red for "stopped," and green for "playing."'),(0,a.kt)("h3",{id:"selecting-a-sequence-for-editing"},"Selecting a Sequence for Editing"),(0,a.kt)("p",null,' Next is the blue button labeled "disp/edit," which, when pressed, selects the sequence for the editing functions below in the "SEQ. EDIT" and "STAGE EDIT" sections. One sequence can be edited at a time, and the blue LED next to this blue button indicates which sequence is currently selected for editing. Pressing the button while the sequence is already selected switches the sequence into a display mode where the various settings associated with that sequence are displayed as the sequence plays. This mode is for displaying settings, and not for editing.'),(0,a.kt)("h3",{id:"stage-number-screen"},"Stage Number Screen"),(0,a.kt)("p",null," This screen shows the current stage number for each sequence."),(0,a.kt)("h3",{id:"pulse-and-cv-out-banana-jacks"},"Pulse and CV Out Banana Jacks"),(0,a.kt)("p",null,' The final part of each sequence section is comprised of the banana outputs for each section; a "pulse" output to trigger envelope generators, etc., and a "CV out" jack for control voltages.'),(0,a.kt)("h2",{id:"seq-edit"},"SEQ. EDIT"),(0,a.kt)("p",null," The Seq. Edit section addresses general controls for the sequence currently selected."),(0,a.kt)("h3",{id:"sync-next"},'"sync next"'),(0,a.kt)("p",null," Pressing this button turns on a function where the subsequent sequencer is reset to stage 1 each time the selected sequence returns to stage 1. This allows the subsequent sequence to act in sync with the selected sequence if they are of the same length, or will create variable alignment outcomes if the sequences are of different lengths."),(0,a.kt)("h3",{id:"reverse"},'"reverse"'),(0,a.kt)("p",null," Activating this yellow button causes the sequence to play in reverse. Keep in mind that playing a sequence in reverse that contains loop information will create different loop outcomes. Using the reverse function with sync can cause peculiar outcomes."),(0,a.kt)("h3",{id:"copy"},"copy"),(0,a.kt)("p",null," The copy function allows you to copy the selected sequence in order to paste it to another sequence."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Select the sequence you'd like to copy"),(0,a.kt)("li",{parentName:"ol"},'Press "copy"'),(0,a.kt)("li",{parentName:"ol"},'Press the "disp/edit" button for the destination sequence for the sequence you have just copied\u2026 this will cause the "copy" LED to blink'),(0,a.kt)("li",{parentName:"ol"},'Press "copy" again to conclude the process')),(0,a.kt)("h3",{id:"clear"},"clear"),(0,a.kt)("p",null," The clear function allows you to reset the settings of a sequence to their defaults."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},'Press "clear"'),(0,a.kt)("li",{parentName:"ol"},'Press the "disp/edit" button for the sequence you\'d like to clear. This will cause the associated LED to blink'),(0,a.kt)("li",{parentName:"ol"},'Press "clear" again. This will reset all parameters associated with the sequence to their default settings')),(0,a.kt)("h3",{id:"tempo"},"tempo"),(0,a.kt)("p",null," The tempo knob and display allow you to set the tempo for the selected sequence. By pressing the tempo knob, which also acts as a button, you gain access to several different means of controlling the stage progress of the selected sequence."),(0,a.kt)("p",null," Turning the tempo knob will give you access to tempos ranging from 6 beats per minute to 300 beats per minute."),(0,a.kt)("p",null," Pressing the tempo knob will activate alternate stage progress schemes. Those schemes are as follows:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"b A"),' : pulses connected to the "stop" banana jack will decrement (move ',(0,a.kt)("strong",{parentName:"p"},"b"),' ackward) the stage number, pulses directed to the "start" banana jack will ',(0,a.kt)("strong",{parentName:"p"},"A")," dvance the stage number."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"J A:"),' on receipt of a "stop" pulse, the stage number \xad ',(0,a.kt)("strong",{parentName:"p"},"J"),' umps to the next stage number that contains a "loop begin," otherwise it jumps to stage 00. "start" pulses ',(0,a.kt)("strong",{parentName:"p"},"A")," dvance it."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"S H"),' : allows the "start and "stop" to act as a ',(0,a.kt)("strong",{parentName:"p"},"S")," ample-and- ",(0,a.kt)("strong",{parentName:"p"},"H"),' old arrangement. Plug a pulse source into the start, and a control voltage source into the "stop." "start" pulses sample the control voltage applied to the "stop" pulse. The sampled control voltage is applied to stage selection; the higher the voltage, the higher the stage.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"d i r"),' : a control voltage applied to the "stop" pulse input is ',(0,a.kt)("strong",{parentName:"p"},"dir"),' ectly applied to stage selection. A pulse applied to the "start" input inhibits this activity.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"c l o")," : MIDI ",(0,a.kt)("strong",{parentName:"p"},"clo"),' ck is enabled. Pulses applied to "start" and "stop" have no effect.'),(0,a.kt)("h3",{id:"init-delay"},'"init delay"'),(0,a.kt)("p",null,' "init delay" allows you to set a delay setting for the start of a sequence after receiving a "start" pulse in hundredths of a second. The range is from .01 to .99 of second. This function has no effect when the sequence is set to cycle or loop, but is in effect when "sync next" is engaged.'),(0,a.kt)("h3",{id:"endcycle"},"end/cycle"),(0,a.kt)("p",null," When pressed, this yellow button allows you to indicate that the currently selected stage is either the point at which a sequence stops, or the point at which the sequence jumps from the current stage to the first stage, and loops."),(0,a.kt)("h2",{id:"stage-edit"},"STAGE EDIT"),(0,a.kt)("p",null," This section of the module allows you to control the note value, the gate length, the CV value, and the loop condition of the selected stage within the selected sequence."),(0,a.kt)("h3",{id:"stage"},"stage"),(0,a.kt)("p",null," Using this knob and LED display, you can select a stage within the sequence you have currently selected."),(0,a.kt)("h3",{id:"interval"},"interval"),(0,a.kt)("p",null," With this knob and LED display, you choose the note value (time interval) of the stage within the context of the tempo you set in the previous section. Pressing the knob will enter a value of zero, allowing the stage to be skipped."),(0,a.kt)("h3",{id:"x15--triplt"},"x1.5 / triplt"),(0,a.kt)("p",null,' Pressing this yellow button allows you to select a "dotted" note value (time interval times 1.5) for the current stage, or a "triplet" note value (time interval times 2/3).'),(0,a.kt)("h3",{id:"dur"},"dur."),(0,a.kt)("p",null,' This green button allows you to select the gate length of the currently selected stage in the currently selected sequence.\nThe default setting is "trans," which is merely a trigger with no gate.\nIf you press the green button, it will then light both "trans" and "x1/2," which indicates a gate that is a quarter of the length of the current note value assigned to the stage (above, in the "interval" setting).\nIf you press the green button again, it will light the "x1/2" LED, indicating a gate that is one half of the length of the selected time interval for the stage.\nIf you press the green button again, "x1/2" and "x1" will light, indicating that the gate will be 3/4ths the length of the time interval selected for the stage.\nIf you press the green button again, "x1" will light, indicating that the gate length is equal to the selected note value.\nOne more press of the green button arrives at no LEDs on, which indicates that no pulse will be output for the stage.'),(0,a.kt)("h3",{id:"cv-out"},"c.v. out"),(0,a.kt)("p",null,' This section allows you to set the voltage output by the selected stage in the selected sequence. Each .1 volts equals one semitone. Since Buchla oscillators expect 1.2 volts per octave (handily aligning with the 12 semitones of an octave), these settings will allow specific note choices.\nIf you need finer tuning control than is provided within the 1.2 volts per octave settings, pressing the knob will put you into a "cents" mode where there is an offset of 00 to 99 cents for each stage.'),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},'Press the knob in the "cv out" section'),(0,a.kt)("li",{parentName:"ol"},'The section is now in "cents" mode, as indicated by the blinking of the display'),(0,a.kt)("li",{parentName:"ol"},"Set the cents offset you require for the stage"),(0,a.kt)("li",{parentName:"ol"},"Press the knob again to exit"),(0,a.kt)("li",{parentName:"ol"},"If cents-related changes were made, a decimal point will be added to the display")),(0,a.kt)("h2",{id:"looping-on-the-251e"},"Looping on the 251e"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchladoc/static/img/200e/251eloops1.jpg",alt:"Looping Example 1",title:"251e loop example 1"})),(0,a.kt)("p",null,'The loop functionality on the Buchla 251e works through the placement of two different kinds of markers on specific stages in the sequence itself. This diagram demonstrates implementation of the "end" marker alone.'),(0,a.kt)("p",null,'The loop functionality works in this way: The sequence starts and progresses until it hits the first "end" loop marker it discovers. Once it hits the first end marker, it jumps immediately backward to the first "beg" marker it comes across as it moves backwards. The sequencer instantly and seamlessly jumps from the "end" marker to the "beg" marker, and then proceeds forward again. If there is no "beg" marker, the sequence will return to the first stage.'),(0,a.kt)("p",null,'This means that it doesn\'t matter initially how many end markers or beg markers you have, the first "end" marker the sequencer encounters makes the sequence jump backward to the nearest "beg" marker.'),(0,a.kt)("p",null,'To set an "end" marker, you must choose the stage that you want the loop to end on. After choosing the stage, merely turn the data knob to the left of the "end" window. You will see the option for numbers 1 through 9, and the letter A. By putting numbers in this window, you are telling the sequence how many times you want this end to be enforced (if you set it to "A," which stands for "always," the end marker is permanent) It doesn\'t send you to a specific stage, it merely tells you how many times the "barrier" of that end marker will send the sequence back to "beg" markers or the first stage. With each time that the sequencer hits that end "barrier," the number will drop one. When the number hits zero, the "barrier" of this loop end will disappear, allowing the sequencer to move past it. However, if by some chance that the sequencer is sent back before it by another end barrier, it will reset and require itself to be hit the number of times you have entered before it opens again.'),(0,a.kt)("p",null,'In this example, we have placed a loop end on stage 12 that will jump the sequence backwards three times. We have not placed a loop beginning "beg," so the loop end will send the sequence back to the beginning. It will do this three times, as that is the number you have entered. When the sequence has hit that end loop point three times, it will reach zero, and the sequence will proceed past the loop end point. The loop end then resets, which means if the sequence is sent back by ANOTHER loop end later in the sequence, this loop end will be reinstated, sending the sequence back to the beginning again three times as pictured in the example.'),(0,a.kt)("p",null,'In the example, the vertical yellow line represents the "barrier" of the end loop setting, and shows how the sequence is sent back to start at the beginning instantly three times, as per the loop end count. If there is no number in the end window when you are on the stage you desire, there is no loop end.'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchladoc/static/img/251eloops2.jpg",alt:"Looping Example 2",title:"251e loop example 2"})),(0,a.kt)("p",null,'In this example, we\'ll see the effect of creating a "beg" marker, or beginning loop point.'),(0,a.kt)("p",null,'To set a "beg" marker, choose the stage you\'d like for the beginning of the loop, and press the yellow button beneath "loop beg." The yellow LED will light, and you\'ll see an "A" in the window next to the button. The "A" stands for "Always," which means that this loop beginning point will always be in action if the sequence is sent back to it by a loop end point. If you\'d like it to only be in action a limited amount of times, you can choose 1-9, which will mean it will be in action as many times as the number you choose, and will count down with each successive activation. Stages can only contain one loop end or one loop beg point.'),(0,a.kt)("p",null,'In the example, we\'ve chosen the number "2" for the loop begin marker. This means if the loop end sends the sequence back to the loop beginning, it will function two times. On the "zero," the loop end marker will send the sequence past the now-dormant loop beg, to the first stage. The next time the sequence is sent backwards by the loop end, if there is one, the loop beg will be reinstated, and count down from 2 again.'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchladoc/static/img/251eloops3.jpg",alt:"Looping Example 3",title:"251e loop example 3"})),(0,a.kt)("p",null,'The "tennis match."'),(0,a.kt)("p",null,"This example shows what happens if you, for example, set two loop end points and two loop beg points. The first loop end point is on stage 10, and will repeat 3 times. The second loop end point is on stage 12, and will repeat 2 times. The first loop beg point (that the sequence will encounter, even if it is second from left) is set to repeat twice, and is on stage 6. The second loop beg point is on stage 4, and will occur once."),(0,a.kt)("p",null,"The sequence will begin at stage 0 and continue until it meets the first loop end point. (The sequence will move past any beg point as it progresses\u2026 they just indicate where an end loop point will send the sequence.) In this case, it will encounter a loop end point on stage 10. It will then be thrown back to the first loop begin point it meets moving backward. In this case, that will be the loop beg point on stage 6, as it is the first it will encounter."),(0,a.kt)("p",null,'As each loop point is hit, its repeat number will decrease by one. Because the "0" end or beginning loop point means that the stage won\'t prevent the sequence from passing it, there will always be an "out" for the sequence when the loop count decreases to zero. If the loop point is set to "A," it might take an external "start" pulse to return the sequence to stage 0 to escape the loop.'),(0,a.kt)("p",null,"Multiple end and beg points with different repeat numbers lead to complex and variable outcomes, as you can see in this diagram. In it, you can see when the beg and end points hit zero, letting the sequence progress, or letting it be sent back to earlier beg points. At one point, both beg points are inactive, allowing the sequence to be thrown back to the first stage."),(0,a.kt)("p",null,'At the end, the "zero" points of both end points align, allowing the sequence to move beyond these loop points.'),(0,a.kt)("h2",{id:"master-clock"},"Master Clock"),(0,a.kt)("p",null," The Master Clock section addresses the speed of the master clock. The section contains two ways to affect the speed of the master clock."),(0,a.kt)("h3",{id:"cv-in"},"c.v. in"),(0,a.kt)("p",null," Plugging a control voltage source into the black banana input and adjusting the attenuverter allows you to manipulate the speed of the master clock."),(0,a.kt)("h3",{id:"knob-with-led"},"Knob with LED"),(0,a.kt)("p",null," When the LED above this knob is off, the master clock is at a 1-to-1 setting regarding the speed. Turning the knob to the right allows you to increase the speed of the sequences to 1.5 times the tempo setting. Turning the knob to the left allows you to slow the speed of the sequencies to .5 times the tempo setting."),(0,a.kt)("h2",{id:"remote-enable"},"REMOTE ENABLE"),(0,a.kt)("p",null," When the Remote Enable LED is on, the module is connected to the 200e system's central library function, as long as there is a 225e or 206e Preset Manager as part of that system."))}u.isMDXComponent=!0}}]);