"use strict";(self.webpackChunkbuchla=self.webpackChunkbuchla||[]).push([[6804],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,f=u["".concat(s,".").concat(h)]||u[h]||d[h]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r={},i="Quad Control Voltage Processor model 256e",l={unversionedId:"200e/256e",id:"200e/256e",title:"Quad Control Voltage Processor model 256e",description:"This module offers various sorts of control voltage processing, including selection, multiplication, addition, scaling, inversion, and non-linear transformation. Its four sections are identical and independent. A description of section A follows, and is applicable to sections B, C, and D.",source:"@site/docs/200e/256e.md",sourceDirName:"200e",slug:"/200e/256e",permalink:"/buchla_doc/docs/200e/256e",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"251e Quad Sequential Voltage Source",permalink:"/buchla_doc/docs/200e/251e"},next:{title:"presetmanager-dbjd",permalink:"/buchla_doc/docs/200e/presetmanager-dbjd"}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quad-control-voltage-processor-model-256e"},"Quad Control Voltage Processor model 256e"),(0,a.kt)("p",null,"This module offers various sorts of control voltage processing, including selection, multiplication, addition, scaling, inversion, and non-linear transformation. Its four sections are identical and independent. A description of section A follows, and is applicable to sections B, C, and D."),(0,a.kt)("p",null,'The leftmost knob selects between two input voltages, A1 and A2 . To enable voltage control of the selection, crank the knob to 0 and apply a selection voltage to "In Select". A voltage applied to "In Select" replaces the knob, performing the following operation:'),(0,a.kt)("p",null,"Vin = InSel x A2 + (1 \u2013 InSel) x A1"),(0,a.kt)("p",null,"Where Vin is the voltage applied to the transformation matrix. For the purposes of the present discussion, the ranges of all input voltages and knob settings are normalized to one. Note that if A1 is unconnected, the input section simply multiplies InSel and A2."),(0,a.kt)("p",null,"Vin is now applied to the transformation matrix, which works as follows:"),(0,a.kt)("p",null,"With no breakpoint specified, 2 LED's will be illuminated, one on the left; the other on the right of the display. A press of the switch adds a single breakpoint, indicated by a third LED somewhere in the display's center."),(0,a.kt)("p",null,"With the breakpoint switched off, the following function is executed:"),(0,a.kt)("p",null,"Vout = Vin x V10volts + (1 - Vin) x V0volts"),(0,a.kt)("p",null,"This is a simple linear transformation of the input voltage. For zero volts input, the output is set by the knob labeled 0 volts in, and for 10 volts input, by the knob labeled 10 volts in. Other values are interpolated, and the transfer function can be represented as a straight line connecting the two endpoints. The two breakpoint knobs are not operative in this mode."),(0,a.kt)("p",null,"Now hit the breakpoint switch, and things get more interesting. A breakpoint LED is illuminated whose location can be set with the two knobs to the right of the switch. The resultant transfer function is the two segment line connecting the three points, mathematically represented as:"),(0,a.kt)("p",null,"If Vin \\< Vinbp,"),(0,a.kt)("p",null,"Vout = (Vin x Voutbp) / Vinbp + (1 \u2013 Vin / Vinbp) V0volts"),(0,a.kt)("p",null,"If Vin ",">"," Vinpb,"),(0,a.kt)("p",null,"Vout = ","[(Vin \u2013 Vinbp) V10volts + (1 \u2013 Vin) Voutbp]"," / (1 - Vinbp)"),(0,a.kt)("p",null,"Sorry that the algebra looks so messy for such a basically simple process. Perhaps a couple of pictorial examples will clarify things for the non-mathematically inclined."),(0,a.kt)("p",null,"The first example is complete transparency \u2013 the 256 does nothing to the applied voltage, and the output is a replica of the input:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchla_doc/static/img/200e/256e-1.jpg",alt:"256e",title:"256e"})),(0,a.kt)("p",null,"Next we take the product of two applied voltages, and invert the result:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchla_doc/static/img/200e/256e-2.jpg",alt:"256e",title:"256e"})),(0,a.kt)("p",null,"Now add a break point, such that the output stays at a constant 2 volts until the average of two inputs exceeds 8 volts \u2013 then the output voltage rapidly goes to 10 volts:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchla_doc/static/img/200e/256e-3.jpg",alt:"256e",title:"256e"})),(0,a.kt)("p",null,"Here we use a voltage to control the proportions of two inputs that are applied to the transform matrix. The output starts at 8 volts, for an applied input of 0 volts, has a negative peak of 0 volts when the input reaches 2 volts, and then goes to 10 volts as the input reaches 10 volts:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"C:buchla_doc/static/img/200e/256e-4.jpg",alt:"256e",title:"256e"})),(0,a.kt)("p",null,"Note that the low resolution display provides a rough but useful indication of the transfer function. The actual voltages are calculated to a high degree of precision, and are appropriate for application to pitch and other variables."),(0,a.kt)("p",null,"Switch status and pot settings of the 256e can be locally stored and subsequently recalled by the model 225e preset manager."),(0,a.kt)("p",null,"To connect or disconnect this module from the central library function, push the remote switch. A lighted LED signifies a connection."),(0,a.kt)("p",null,"Note that this module has two computers; when downloading or checking firmware, use the breakpoint switches A and C instead of the remote enable switch."))}u.isMDXComponent=!0}}]);